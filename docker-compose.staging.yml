version: "3"

services:
  staging-postgresdb:
    image: postgres
    container_name: staging-postgresdb
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - staging-postgresdatax:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - staging-backend-net

  staging-rabbitmq:
    image: rabbitmq:3-management
    container_name: staging-rabbitmq
    ports:
      - "15672:15672" # Management UI
      - "5672:5672"   # AMQP port
    env_file:
      - ./.env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - staging-backend-net
    restart: unless-stopped

  backend:
    build: .
    container_name: staging
    ports:
      - "8000:8080"
    env_file:
      - ./.env
    environment:
      - SPRING_CONFIG_LOCATION=/app/config/application.properties
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    volumes:
      - ./src/main/resources/application.properties:/app/config/application.properties
    networks:
      - staging-backend-net
    depends_on:
      staging-rabbitmq:
        condition: service_healthy
      staging-postgresdb:
        condition: service_healthy
    restart: unless-stopped

networks:
  staging-backend-net:
    driver: bridge

volumes:
  staging-postgresdatax:
